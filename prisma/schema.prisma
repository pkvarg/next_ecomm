// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init




generator client {
  provider = "prisma-client-js"
  output   = "../prisma/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}



model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  email      String   @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt  
  subscriber Boolean  @default(false)
  orders     Order[]
  lastLogin  DateTime @default(now())
}

model Product {
  id                     String  @id @default(auto()) @map("_id") @db.ObjectId
  name                   String
  priceInCents           Int
  filePath               String?
  imagePath              String
  description            String?
  isAvailableForPurchase Boolean @default(true)
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
  countInStock           Int     @default(0)
  qty                    Int 
}

model Order {
  id                         String    @id @default(auto()) @map("_id") @db.ObjectId
  orderNumber                String
  pricePaidInCents           Int
  productTotalsPrice         Float
  postage                    Float
  tax                        Float
  createdAt                  DateTime  @default(now())
  updatedAt                  DateTime  @updatedAt
  userEmail                  String
  shippingInfo               Json
  isCancelled                Boolean   @default(false)
  isCancelledOrderNumberUsed Boolean   @default(false)
  newsletter                 Boolean   @default(false)
  user                       User      @relation(fields: [userId], references: [id])
  userId                     String    @db.ObjectId
  products                   Json[]
  sentAt                     DateTime? 
  paidAt                     DateTime? 
  orderEmailSent             Boolean   @default(false)
}

model VisitorsCount {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  count     Int   @unique
  updatedAt DateTime @updatedAt  
}





